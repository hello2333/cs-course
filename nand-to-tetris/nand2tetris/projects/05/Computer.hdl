// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Computer.hdl

/**
 * The HACK computer, including CPU, ROM and RAM.
 * When reset is 0, the program stored in the computer's ROM executes.
 * When reset is 1, the execution of the program restarts. 
 * Thus, to start a program's execution, reset must be pushed "up" (1)
 * and "down" (0). From this point onward the user is at the mercy of 
 * the software. In particular, depending on the program's code, the 
 * screen may show some output and the user may be able to interact 
 * with the computer via the keyboard.
 */

CHIP Computer {

    IN reset;

    PARTS:
    // Put your code here:
    // V1
    // Memory(in=outM, load=writeM, address=address, out=inputM);
    // Memory(in=pc, load=false, address=address, out=instruction);
    // CPU(inM=inputM, instruction=instruction, reset=reset,
    //     outM=outM, writeM=writeM, addressM=address, pc=pc);

    // V2
    // RAM16K(in=outM , load=writeM , address=addressRAM , out=inputM );
    // ROM32K(address=pc , out=instruction );
    // Screen(in=outM , load=writeM , 
    //   address=addressScreen , 
    //   out=screenOUt );
    // CPU(inM=inputM, instruction=instruction, reset=reset,
    //     outM=outM, writeM=writeM, 
    //     addressM=originAddress, 
    //     addressM[0..13]=addressRAM, 
    //     addressM[0..12]=addressScreen, 
    //     pc=pc);

    // V3
    ROM32K(address=pc , out=instruction );
    Memory(in=outM, load=writeM, address=originAddress, out=inputM);
    CPU(inM=inputM, instruction=instruction, reset=reset,
        outM=outM, writeM=writeM, 
        addressM=originAddress, 
        pc=pc);
}
